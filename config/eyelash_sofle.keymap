#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    left_meh: left_meh {
        compatible = "zmk,behavior-tap-dance";
        label = "LEFT_MEH";
        #binding-cells = <0>;
        bindings = <&kp LEFT_CONTROL>, <&kp LS(LA(LEFT_CONTROL))>;
    };

    right_meh: right_meh {
        compatible = "zmk,behavior-tap-dance";
        label = "RIGHT_MEH";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_CONTROL>, <&kp RS(RA(RIGHT_CONTROL))>;
    };

    left_hyper: left_hyper {
        compatible = "zmk,behavior-tap-dance";
        label = "LEFT_HYPER";
        #binding-cells = <0>;
        bindings = <&kp LEFT_ALT>, <&kp LS(LG(LC(LEFT_ALT)))>;
    };

    right_hyper: right_hyper {
        compatible = "zmk,behavior-tap-dance";
        label = "RIGHT_HYPER";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_ALT>, <&kp RS(RC(RG(RIGHT_ALT)))>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <280>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <280>;
        hold-trigger-on-release;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            bindings = <
&gresc            &kp N1               &kp N2           &kp N3           &kp N4  &kp N5     &kp UP_ARROW     &kp N6     &kp N7  &kp N8             &kp N9            &kp N0                        &kp BACKSPACE
&kp TAB           &kp Q                &kp W            &kp E            &kp R   &kp T      &kp DOWN_ARROW   &kp Y      &kp U   &kp I              &kp O             &kp P                         &kp BSLH
&caps_word        &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &kp F   &kp G      &kp LEFT_ARROW   &kp H      &kp J   &hmr RIGHT_GUI K   &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMICOLON  &kp APOS
&mt LSHFT LS(N9)  &kp Z                &kp X            &kp C            &kp V   &kp B      &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA          &kp DOT           &kp FSLH                      &mt RIGHT_SHIFT RS(N0)
&kp C_MUTE        &left_meh            &left_hyper      &kp LEFT_GUI     &mo 1   &kp RET    &kp ENTER        &kp SPACE  &mo 2   &kp RIGHT_COMMAND  &right_hyper      &right_meh
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Main";
        };

        Layer1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "Layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        Layer2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8   &kp F9   &kp F10    &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11  &kp F12  &kp UNDER  &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans   &trans   &kp LBRC   &kp RBRC
&trans     &trans        &trans          &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &trans   &trans   &trans     &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans   &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
